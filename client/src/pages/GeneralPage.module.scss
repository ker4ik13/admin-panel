@import "@/shared/styles/_vars";

.page {
  margin-left: rem(250);
  padding: rem(20);
  background-color: rgb(var(--bg-color-light-main));
  min-height: calc(100vh - rem(81));
  position: relative;
}
.title {
  @include inter();
  cursor: text;
  font-weight: 600;
  display: inline;
  color: rgb(var(--text-color-dark));
}

// Настройки

.settings {
  margin-top: rem(20);
}
.stringInput {
  display: flex;
  align-items: center;
  gap: rem(10);
}
.inputLabel {
  font-size: rem(18);
  cursor: pointer;
  color: rgb(var(--text-color-dark));
}
.checkboxWrapper {
  display: flex;
  align-items: center;
}
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkboxWrapper input[type="checkbox"] {
    --active: #275efe;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, 0.3);
    --border: #bbc1e1;
    --border-hover: #275efe;
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: rem(21);
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  .checkboxWrapper input[type="checkbox"]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease),
      opacity var(--d-o, 0.2s);
  }
  .checkboxWrapper input[type="checkbox"]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
  }
  .checkboxWrapper input[type="checkbox"]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  .checkboxWrapper input[type="checkbox"]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  .checkboxWrapper input[type="checkbox"]:disabled + label {
    cursor: not-allowed;
  }
  .checkboxWrapper input[type="checkbox"]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  .checkboxWrapper input[type="checkbox"]:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  .checkboxWrapper input[type="checkbox"]:not(.checkbox) {
    width: rem(21);
  }
  .checkboxWrapper input[type="checkbox"]:not(.checkbox):after {
    opacity: var(--o, 0);
  }
  .checkboxWrapper input[type="checkbox"]:not(.checkbox):checked {
    --o: 1;
  }
  .checkboxWrapper input[type="checkbox"] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkboxWrapper input[type="checkbox"]:not(.checkbox) {
    border-radius: 7px;
  }
  .checkboxWrapper input[type="checkbox"]:not(.checkbox):after {
    width: rem(5);
    height: rem(9);
    border: rem(2) solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: rem(7);
    top: rem(4);
    transform: rotate(var(--r, 20deg));
  }
  .checkboxWrapper input[type="checkbox"]:not(.checkbox):checked {
    --r: 43deg;
  }
  .checkboxWrapper input[type="checkbox"].checkbox {
    width: rem(38);
    border-radius: rem(11);
  }
  .checkboxWrapper input[type="checkbox"].checkbox:after {
    left: rem(2);
    top: rem(2);
    border-radius: 50%;
    width: rem(15);
    height: rem(15);
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
  }
  .checkboxWrapper input[type="checkbox"].checkbox:checked {
    --ab: var(--active-inner);
    --x: 1.065rem;
  }
  .checkboxWrapper
    input[type="checkbox"].checkbox:disabled:not(:checked):after {
    opacity: 0.6;
  }
}

.checkboxWrapper * {
  box-sizing: inherit;
}
.checkboxWrapper *:before,
.checkboxWrapper *:after {
  box-sizing: inherit;
}

// Отклики
.responses {
  display: flex;
  gap: rem(20);
  margin-top: rem(20);
}
